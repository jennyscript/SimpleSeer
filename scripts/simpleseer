#!/usr/bin/env python
import sys
import time
import argparse
import logging.config

from multiprocessing import Process

def main():
   parser = argparse.ArgumentParser()
   subparsers = parser.add_subparsers(
      title='subcommands',
      description='valid subcommands')
   broker = subparsers.add_parser(
      'broker', description='Run the message broker')
   web = subparsers.add_parser(
      'web', description='Run the web server')
   core = subparsers.add_parser(
      'core', description='Run the core server')

   parser.add_argument('-l', '--logging', dest='logging', default='logging.ini')
   parser.add_argument('-c', '--config', dest='config', default='default.cfg')
   broker.set_defaults(func=pubsub_broker)
   web.set_defaults(func=web_server)
   core.set_defaults(func=compute_server)

   args = parser.parse_args()
   logging.config.fileConfig(args.logging)
   from SimpleSeer.Session import Session

   session = Session(args.config)
   args.func(session)

def compute_server(session):
   from SimpleSeer.SimpleSeer import SimpleSeer
   from SimpleSeer.service import SeerService
   from SimpleSeer.Shell import SeerKernel
   seer = SimpleSeer()
   SeerService(seer).start()
   # SeerService(seer).run()
   # SeerKernel must run in main thread
   SeerKernel(seer).run()

def web_server(session):
   init_gevent_subprocess()
   from SimpleSeer.Web import WebServer, make_app
   web = WebServer(make_app())
   web.run_gevent_server()

def pubsub_broker(session):
   init_gevent_subprocess()
   from SimpleSeer.broker import PubSubBroker
   psb = PubSubBroker(session.pub_uri, session.sub_uri)
   psb.serve_forever()

def init_gevent_subprocess():
   # Monkey patch socket routines
   from gevent import monkey
   monkey.patch_all()
   # Proxy access to the seer object
   from SimpleSeer import SimpleSeer
   from SimpleSeer.service import SeerClient
   SimpleSeer.SimpleSeer = SeerClient()

if __name__ == '__main__':
   main()

